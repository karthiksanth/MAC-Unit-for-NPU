/* Generated by Yosys 0.42+2 (git sha1 82783646e, g++ 13.2.0-23ubuntu4 -fPIC -Os) */

module Carry_Look_Ahead_Adder(A, B, S);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire _47_;
  input [4:0] A;
  wire [4:0] A;
  input [4:0] B;
  wire [4:0] B;
  wire [4:0] P;
  output [4:0] S;
  wire [4:0] S;
  sky130_fd_sc_hd__nand2_1 _48_ (
    .A(_28_),
    .B(_23_),
    .Y(_38_)
  );
  sky130_fd_sc_hd__xor2_1 _49_ (
    .A(_28_),
    .B(_23_),
    .X(_33_)
  );
  sky130_fd_sc_hd__nor2_1 _50_ (
    .A(_29_),
    .B(_24_),
    .Y(_39_)
  );
  sky130_fd_sc_hd__nand2_1 _51_ (
    .A(_29_),
    .B(_24_),
    .Y(_40_)
  );
  sky130_fd_sc_hd__nor2b_1 _52_ (
    .A(_39_),
    .B_N(_40_),
    .Y(_41_)
  );
  sky130_fd_sc_hd__xnor2_1 _53_ (
    .A(_38_),
    .B(_41_),
    .Y(_34_)
  );
  sky130_fd_sc_hd__o21ai_0 _54_ (
    .A1(_38_),
    .A2(_39_),
    .B1(_40_),
    .Y(_42_)
  );
  sky130_fd_sc_hd__xnor2_1 _55_ (
    .A(_30_),
    .B(_25_),
    .Y(_43_)
  );
  sky130_fd_sc_hd__xnor2_1 _56_ (
    .A(_42_),
    .B(_43_),
    .Y(_35_)
  );
  sky130_fd_sc_hd__maj3_1 _57_ (
    .A(_30_),
    .B(_25_),
    .C(_42_),
    .X(_44_)
  );
  sky130_fd_sc_hd__xnor2_1 _58_ (
    .A(_31_),
    .B(_26_),
    .Y(_45_)
  );
  sky130_fd_sc_hd__xnor2_1 _59_ (
    .A(_44_),
    .B(_45_),
    .Y(_36_)
  );
  sky130_fd_sc_hd__maj3_1 _60_ (
    .A(_31_),
    .B(_26_),
    .C(_44_),
    .X(_46_)
  );
  sky130_fd_sc_hd__xnor2_1 _61_ (
    .A(_32_),
    .B(_27_),
    .Y(_47_)
  );
  sky130_fd_sc_hd__xnor2_1 _62_ (
    .A(_46_),
    .B(_47_),
    .Y(_37_)
  );
  assign P[0] = S[0];
  assign _28_ = B[0];
  assign _23_ = A[0];
  assign S[0] = _33_;
  assign _29_ = B[1];
  assign _24_ = A[1];
  assign S[1] = _34_;
  assign _30_ = B[2];
  assign _25_ = A[2];
  assign S[2] = _35_;
  assign _31_ = B[3];
  assign _26_ = A[3];
  assign S[3] = _36_;
  assign _32_ = B[4];
  assign _27_ = A[4];
  assign S[4] = _37_;
endmodule

module Full_Adder(Sum, Cout, A, B, C);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  wire _4_;
  wire _5_;
  wire _6_;
  wire _7_;
  input A;
  wire A;
  input B;
  wire B;
  input C;
  wire C;
  output Cout;
  wire Cout;
  output Sum;
  wire Sum;
  sky130_fd_sc_hd__xor3_1 _8_ (
    .A(_4_),
    .B(_3_),
    .C(_5_),
    .X(_7_)
  );
  sky130_fd_sc_hd__maj3_1 _9_ (
    .A(_4_),
    .B(_3_),
    .C(_5_),
    .X(_6_)
  );
  assign _4_ = B;
  assign _3_ = A;
  assign _5_ = C;
  assign Sum = _7_;
  assign Cout = _6_;
endmodule

module Half_Adder(Sum, Cout, A, B);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  input A;
  wire A;
  input B;
  wire B;
  output Cout;
  wire Cout;
  output Sum;
  wire Sum;
  sky130_fd_sc_hd__and2_0 _4_ (
    .A(_1_),
    .B(_0_),
    .X(_2_)
  );
  sky130_fd_sc_hd__xor2_1 _5_ (
    .A(_1_),
    .B(_0_),
    .X(_3_)
  );
  assign _1_ = B;
  assign _0_ = A;
  assign Sum = _3_;
  assign Cout = _2_;
endmodule

module Increment(A, B, S);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  input [2:0] A;
  wire [2:0] A;
  input B;
  wire B;
  wire P;
  output [2:0] S;
  wire [2:0] S;
  sky130_fd_sc_hd__nand2_1 _11_ (
    .A(_05_),
    .B(_02_),
    .Y(_10_)
  );
  sky130_fd_sc_hd__xor2_1 _12_ (
    .A(_05_),
    .B(_02_),
    .X(_06_)
  );
  sky130_fd_sc_hd__nand3_1 _13_ (
    .A(_05_),
    .B(_02_),
    .C(_03_),
    .Y(_09_)
  );
  sky130_fd_sc_hd__xnor2_1 _14_ (
    .A(_03_),
    .B(_10_),
    .Y(_07_)
  );
  sky130_fd_sc_hd__xnor2_1 _15_ (
    .A(_04_),
    .B(_09_),
    .Y(_08_)
  );
  assign S[0] = P;
  assign _05_ = B;
  assign _02_ = A[0];
  assign P = _06_;
  assign _03_ = A[1];
  assign S[1] = _07_;
  assign _04_ = A[2];
  assign S[2] = _08_;
endmodule

module Look_Ahead_Adder(A, B, S, Cout, Cin);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire _47_;
  wire _48_;
  input [3:0] A;
  wire [3:0] A;
  input [3:0] B;
  wire [3:0] B;
  wire C4;
  input Cin;
  wire Cin;
  output Cout;
  wire Cout;
  wire G0;
  wire G1;
  wire G2;
  wire G3;
  wire P0;
  wire P1;
  wire P2;
  wire P3;
  output [3:0] S;
  wire [3:0] S;
  sky130_fd_sc_hd__clkinv_1 _49_ (
    .A(_34_),
    .Y(_41_)
  );
  sky130_fd_sc_hd__nand4_1 _50_ (
    .A(_35_),
    .B(_34_),
    .C(_33_),
    .D(_27_),
    .Y(_42_)
  );
  sky130_fd_sc_hd__a21oi_1 _51_ (
    .A1(_35_),
    .A2(_30_),
    .B1(_31_),
    .Y(_43_)
  );
  sky130_fd_sc_hd__a21boi_0 _52_ (
    .A1(_42_),
    .A2(_43_),
    .B1_N(_36_),
    .Y(_44_)
  );
  sky130_fd_sc_hd__nand3_1 _53_ (
    .A(_35_),
    .B(_29_),
    .C(_34_),
    .Y(_45_)
  );
  sky130_fd_sc_hd__or3b_1 _54_ (
    .A(_32_),
    .B(_44_),
    .C_N(_45_),
    .X(_28_)
  );
  sky130_fd_sc_hd__xor2_1 _55_ (
    .A(_33_),
    .B(_27_),
    .X(_37_)
  );
  sky130_fd_sc_hd__a21oi_1 _56_ (
    .A1(_33_),
    .A2(_27_),
    .B1(_29_),
    .Y(_46_)
  );
  sky130_fd_sc_hd__xnor2_1 _57_ (
    .A(_34_),
    .B(_46_),
    .Y(_38_)
  );
  sky130_fd_sc_hd__o21bai_1 _58_ (
    .A1(_41_),
    .A2(_46_),
    .B1_N(_30_),
    .Y(_47_)
  );
  sky130_fd_sc_hd__xor2_1 _59_ (
    .A(_35_),
    .B(_47_),
    .X(_39_)
  );
  sky130_fd_sc_hd__and3_1 _60_ (
    .A(_42_),
    .B(_43_),
    .C(_45_),
    .X(_48_)
  );
  sky130_fd_sc_hd__xnor2_1 _61_ (
    .A(_36_),
    .B(_48_),
    .Y(_40_)
  );
  ha X1 (
    .a(A[0]),
    .b(B[0]),
    .co(G0),
    .sum(P0)
  );
  ha X2 (
    .a(A[1]),
    .b(B[1]),
    .co(G1),
    .sum(P1)
  );
  ha X3 (
    .a(A[2]),
    .b(B[2]),
    .co(G2),
    .sum(P2)
  );
  ha X4 (
    .a(A[3]),
    .b(B[3]),
    .co(G3),
    .sum(P3)
  );
  assign C4 = Cout;
  assign _36_ = P3;
  assign _31_ = G2;
  assign _32_ = G3;
  assign _35_ = P2;
  assign _30_ = G1;
  assign _29_ = G0;
  assign _34_ = P1;
  assign _33_ = P0;
  assign _27_ = Cin;
  assign Cout = _28_;
  assign S[0] = _37_;
  assign S[1] = _38_;
  assign S[2] = _39_;
  assign S[3] = _40_;
endmodule

module Look_Ahead_Adder_No_Cin(A, B, S, Cout);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  input [3:0] A;
  wire [3:0] A;
  input [3:0] B;
  wire [3:0] B;
  wire C1;
  wire C4;
  output Cout;
  wire Cout;
  wire G0;
  wire G1;
  wire G2;
  wire G3;
  wire P0;
  wire P1;
  wire P2;
  wire P3;
  output [3:0] S;
  wire [3:0] S;
  sky130_fd_sc_hd__clkinv_1 _28_ (
    .A(_21_),
    .Y(_25_)
  );
  sky130_fd_sc_hd__a21o_1 _29_ (
    .A1(_19_),
    .A2(_14_),
    .B1(_16_),
    .X(_26_)
  );
  sky130_fd_sc_hd__a21oi_1 _30_ (
    .A1(_20_),
    .A2(_26_),
    .B1(_17_),
    .Y(_27_)
  );
  sky130_fd_sc_hd__o21bai_1 _31_ (
    .A1(_25_),
    .A2(_27_),
    .B1_N(_18_),
    .Y(_15_)
  );
  sky130_fd_sc_hd__xor2_1 _32_ (
    .A(_19_),
    .B(_14_),
    .X(_22_)
  );
  sky130_fd_sc_hd__xor2_1 _33_ (
    .A(_20_),
    .B(_26_),
    .X(_23_)
  );
  sky130_fd_sc_hd__xnor2_1 _34_ (
    .A(_21_),
    .B(_27_),
    .Y(_24_)
  );
  ha X1 (
    .a(A[0]),
    .b(B[0]),
    .co(C1),
    .sum(P0)
  );
  ha X2 (
    .a(A[1]),
    .b(B[1]),
    .co(G1),
    .sum(P1)
  );
  ha X3 (
    .a(A[2]),
    .b(B[2]),
    .co(G2),
    .sum(P2)
  );
  ha X4 (
    .a(A[3]),
    .b(B[3]),
    .co(G3),
    .sum(P3)
  );
  assign C4 = Cout;
  assign G0 = C1;
  assign S[0] = P0;
  assign _21_ = P3;
  assign _17_ = G2;
  assign _18_ = G3;
  assign _20_ = P2;
  assign _16_ = G1;
  assign _19_ = P1;
  assign _14_ = C1;
  assign Cout = _15_;
  assign S[1] = _22_;
  assign S[2] = _23_;
  assign S[3] = _24_;
endmodule

module M4_Carry_Look_Ahead_Adder(S, A, B);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  input [4:0] A;
  wire [4:0] A;
  input [3:0] B;
  wire [3:0] B;
  wire [4:0] P;
  output [4:0] S;
  wire [4:0] S;
  sky130_fd_sc_hd__nand2_1 _45_ (
    .A(_27_),
    .B(_22_),
    .Y(_36_)
  );
  sky130_fd_sc_hd__xor2_1 _46_ (
    .A(_27_),
    .B(_22_),
    .X(_31_)
  );
  sky130_fd_sc_hd__nor2_1 _47_ (
    .A(_28_),
    .B(_23_),
    .Y(_37_)
  );
  sky130_fd_sc_hd__nand2_1 _48_ (
    .A(_28_),
    .B(_23_),
    .Y(_38_)
  );
  sky130_fd_sc_hd__nor2b_1 _49_ (
    .A(_37_),
    .B_N(_38_),
    .Y(_39_)
  );
  sky130_fd_sc_hd__xnor2_1 _50_ (
    .A(_36_),
    .B(_39_),
    .Y(_32_)
  );
  sky130_fd_sc_hd__o21ai_0 _51_ (
    .A1(_36_),
    .A2(_37_),
    .B1(_38_),
    .Y(_40_)
  );
  sky130_fd_sc_hd__xnor2_1 _52_ (
    .A(_29_),
    .B(_24_),
    .Y(_41_)
  );
  sky130_fd_sc_hd__xnor2_1 _53_ (
    .A(_40_),
    .B(_41_),
    .Y(_33_)
  );
  sky130_fd_sc_hd__maj3_1 _54_ (
    .A(_29_),
    .B(_24_),
    .C(_40_),
    .X(_42_)
  );
  sky130_fd_sc_hd__xnor2_1 _55_ (
    .A(_30_),
    .B(_25_),
    .Y(_43_)
  );
  sky130_fd_sc_hd__xnor2_1 _56_ (
    .A(_42_),
    .B(_43_),
    .Y(_34_)
  );
  sky130_fd_sc_hd__maj3_1 _57_ (
    .A(_30_),
    .B(_25_),
    .C(_42_),
    .X(_44_)
  );
  sky130_fd_sc_hd__xor2_1 _58_ (
    .A(_26_),
    .B(_44_),
    .X(_35_)
  );
  assign { P[4], P[0] } = { A[4], S[0] };
  assign _27_ = B[0];
  assign _22_ = A[0];
  assign S[0] = _31_;
  assign _28_ = B[1];
  assign _23_ = A[1];
  assign S[1] = _32_;
  assign _29_ = B[2];
  assign _24_ = A[2];
  assign S[2] = _33_;
  assign _30_ = B[3];
  assign _25_ = A[3];
  assign S[3] = _34_;
  assign _26_ = A[4];
  assign S[4] = _35_;
endmodule

module M_4x4_1(Result, A, B);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  input [3:0] A;
  wire [3:0] A;
  wire \And_array[0] ;
  wire \And_array[10] ;
  wire \And_array[11] ;
  wire \And_array[12] ;
  wire \And_array[13] ;
  wire \And_array[14] ;
  wire \And_array[15] ;
  wire \And_array[1] ;
  wire \And_array[2] ;
  wire \And_array[3] ;
  wire \And_array[4] ;
  wire \And_array[5] ;
  wire \And_array[6] ;
  wire \And_array[7] ;
  wire \And_array[8] ;
  wire \And_array[9] ;
  input [3:0] B;
  wire [3:0] B;
  wire [4:0] Carry_1;
  wire [4:0] Carry_2;
  output [7:0] Result;
  wire [7:0] Result;
  wire [3:0] Sum_1;
  wire [3:0] Sum_2;
  sky130_fd_sc_hd__and2_0 _24_ (
    .A(_20_),
    .B(_00_),
    .X(_10_)
  );
  sky130_fd_sc_hd__and2_0 _25_ (
    .A(_00_),
    .B(_21_),
    .X(_09_)
  );
  sky130_fd_sc_hd__and2_0 _26_ (
    .A(_00_),
    .B(_22_),
    .X(_08_)
  );
  sky130_fd_sc_hd__and2_0 _27_ (
    .A(_00_),
    .B(_23_),
    .X(_07_)
  );
  sky130_fd_sc_hd__and2_0 _28_ (
    .A(_20_),
    .B(_01_),
    .X(_06_)
  );
  sky130_fd_sc_hd__and2_0 _29_ (
    .A(_21_),
    .B(_01_),
    .X(_05_)
  );
  sky130_fd_sc_hd__and2_0 _30_ (
    .A(_22_),
    .B(_01_),
    .X(_19_)
  );
  sky130_fd_sc_hd__and2_0 _31_ (
    .A(_23_),
    .B(_01_),
    .X(_18_)
  );
  sky130_fd_sc_hd__and2_0 _32_ (
    .A(_20_),
    .B(_02_),
    .X(_17_)
  );
  sky130_fd_sc_hd__and2_0 _33_ (
    .A(_21_),
    .B(_02_),
    .X(_16_)
  );
  sky130_fd_sc_hd__and2_0 _34_ (
    .A(_22_),
    .B(_02_),
    .X(_15_)
  );
  sky130_fd_sc_hd__and2_0 _35_ (
    .A(_23_),
    .B(_02_),
    .X(_14_)
  );
  sky130_fd_sc_hd__and2_0 _36_ (
    .A(_20_),
    .B(_03_),
    .X(_13_)
  );
  sky130_fd_sc_hd__and2_0 _37_ (
    .A(_21_),
    .B(_03_),
    .X(_12_)
  );
  sky130_fd_sc_hd__and2_0 _38_ (
    .A(_22_),
    .B(_03_),
    .X(_11_)
  );
  sky130_fd_sc_hd__and2_0 _39_ (
    .A(_23_),
    .B(_03_),
    .X(_04_)
  );
  M4_Carry_Look_Ahead_Adder CLA_4_0 (
    .A(Carry_2),
    .B(Sum_2),
    .S(Result[7:3])
  );
  Full_Adder Fa_M4_10 (
    .A(\And_array[7] ),
    .B(\And_array[10] ),
    .C(\And_array[13] ),
    .Cout(Carry_1[1]),
    .Sum(Sum_1[0])
  );
  Full_Adder Fa_M4_11 (
    .A(\And_array[3] ),
    .B(\And_array[6] ),
    .C(\And_array[9] ),
    .Cout(Carry_1[2]),
    .Sum(Sum_1[1])
  );
  Full_Adder Fa_M4_12 (
    .A(\And_array[2] ),
    .B(\And_array[5] ),
    .C(\And_array[8] ),
    .Cout(Carry_1[3]),
    .Sum(Sum_1[2])
  );
  Full_Adder Fa_M4_20 (
    .A(Sum_1[1]),
    .B(Carry_1[1]),
    .C(\And_array[12] ),
    .Cout(Carry_2[1]),
    .Sum(Sum_2[0])
  );
  Half_Adder Ha_M4_10 (
    .A(\And_array[11] ),
    .B(\And_array[14] ),
    .Cout(Carry_1[0]),
    .Sum(Result[1])
  );
  Half_Adder Ha_M4_11 (
    .A(\And_array[1] ),
    .B(\And_array[4] ),
    .Cout(Carry_1[4]),
    .Sum(Sum_1[3])
  );
  Half_Adder Ha_M4_20 (
    .A(Sum_1[0]),
    .B(Carry_1[0]),
    .Cout(Carry_2[0]),
    .Sum(Result[2])
  );
  Half_Adder Ha_M4_21 (
    .A(Sum_1[2]),
    .B(Carry_1[2]),
    .Cout(Carry_2[2]),
    .Sum(Sum_2[1])
  );
  Half_Adder Ha_M4_22 (
    .A(Sum_1[3]),
    .B(Carry_1[3]),
    .Cout(Carry_2[3]),
    .Sum(Sum_2[2])
  );
  Half_Adder Ha_M4_23 (
    .A(\And_array[0] ),
    .B(Carry_1[4]),
    .Cout(Carry_2[4]),
    .Sum(Sum_2[3])
  );
  assign Result[0] = \And_array[15] ;
  assign _20_ = B[0];
  assign _00_ = A[0];
  assign \And_array[15]  = _10_;
  assign _21_ = B[1];
  assign \And_array[14]  = _09_;
  assign _22_ = B[2];
  assign \And_array[13]  = _08_;
  assign _23_ = B[3];
  assign \And_array[12]  = _07_;
  assign _01_ = A[1];
  assign \And_array[11]  = _06_;
  assign \And_array[10]  = _05_;
  assign \And_array[9]  = _19_;
  assign \And_array[8]  = _18_;
  assign _02_ = A[2];
  assign \And_array[7]  = _17_;
  assign \And_array[6]  = _16_;
  assign \And_array[5]  = _15_;
  assign \And_array[4]  = _14_;
  assign _03_ = A[3];
  assign \And_array[3]  = _13_;
  assign \And_array[2]  = _12_;
  assign \And_array[1]  = _11_;
  assign \And_array[0]  = _04_;
endmodule

module M_4x4_2(Result, A, B, Sign);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  input [3:0] A;
  wire [3:0] A;
  wire [15:0] And_array;
  input [3:0] B;
  wire [3:0] B;
  wire [4:0] Carry_1;
  wire [4:0] Carry_2;
  output [7:0] Result;
  wire [7:0] Result;
  input Sign;
  wire Sign;
  wire [3:0] Sum_1;
  wire [3:0] Sum_2;
  sky130_fd_sc_hd__and2_0 _33_ (
    .A(_23_),
    .B(_04_),
    .X(_27_)
  );
  sky130_fd_sc_hd__and2_0 _34_ (
    .A(_04_),
    .B(_24_),
    .X(_14_)
  );
  sky130_fd_sc_hd__and2_0 _35_ (
    .A(_04_),
    .B(_25_),
    .X(_15_)
  );
  sky130_fd_sc_hd__and2_0 _36_ (
    .A(_04_),
    .B(_26_),
    .X(_16_)
  );
  sky130_fd_sc_hd__and2_0 _37_ (
    .A(_23_),
    .B(_05_),
    .X(_17_)
  );
  sky130_fd_sc_hd__and2_0 _38_ (
    .A(_24_),
    .B(_05_),
    .X(_18_)
  );
  sky130_fd_sc_hd__and2_0 _39_ (
    .A(_25_),
    .B(_05_),
    .X(_19_)
  );
  sky130_fd_sc_hd__and2_0 _40_ (
    .A(_26_),
    .B(_05_),
    .X(_20_)
  );
  sky130_fd_sc_hd__and2_0 _41_ (
    .A(_23_),
    .B(_06_),
    .X(_21_)
  );
  sky130_fd_sc_hd__and2_0 _42_ (
    .A(_24_),
    .B(_06_),
    .X(_22_)
  );
  sky130_fd_sc_hd__and2_0 _43_ (
    .A(_25_),
    .B(_06_),
    .X(_08_)
  );
  sky130_fd_sc_hd__and2_0 _44_ (
    .A(_26_),
    .B(_06_),
    .X(_09_)
  );
  sky130_fd_sc_hd__nand2_1 _45_ (
    .A(_23_),
    .B(_07_),
    .Y(_29_)
  );
  sky130_fd_sc_hd__xnor2_1 _46_ (
    .A(_28_),
    .B(_29_),
    .Y(_10_)
  );
  sky130_fd_sc_hd__nand2_1 _47_ (
    .A(_24_),
    .B(_07_),
    .Y(_30_)
  );
  sky130_fd_sc_hd__xnor2_1 _48_ (
    .A(_28_),
    .B(_30_),
    .Y(_11_)
  );
  sky130_fd_sc_hd__nand2_1 _49_ (
    .A(_25_),
    .B(_07_),
    .Y(_31_)
  );
  sky130_fd_sc_hd__xnor2_1 _50_ (
    .A(_28_),
    .B(_31_),
    .Y(_12_)
  );
  sky130_fd_sc_hd__nand2_1 _51_ (
    .A(_26_),
    .B(_07_),
    .Y(_32_)
  );
  sky130_fd_sc_hd__xnor2_1 _52_ (
    .A(_28_),
    .B(_32_),
    .Y(_13_)
  );
  M4_Carry_Look_Ahead_Adder CLA_4_1 (
    .A(Carry_2),
    .B(Sum_2),
    .S(Result[7:3])
  );
  Full_Adder Fa_M4_10 (
    .A(And_array[8]),
    .B(And_array[5]),
    .C(And_array[2]),
    .Cout(Carry_1[1]),
    .Sum(Sum_1[0])
  );
  Full_Adder Fa_M4_11 (
    .A(And_array[12]),
    .B(And_array[9]),
    .C(And_array[6]),
    .Cout(Carry_1[2]),
    .Sum(Sum_1[1])
  );
  Full_Adder Fa_M4_12 (
    .A(And_array[13]),
    .B(And_array[10]),
    .C(And_array[7]),
    .Cout(Carry_1[3]),
    .Sum(Sum_1[2])
  );
  Full_Adder Fa_M4_20 (
    .A(Sum_1[1]),
    .B(Carry_1[1]),
    .C(And_array[3]),
    .Cout(Carry_2[1]),
    .Sum(Sum_2[0])
  );
  Half_Adder Ha_M4_10 (
    .A(And_array[4]),
    .B(And_array[1]),
    .Cout(Carry_1[0]),
    .Sum(Result[1])
  );
  Half_Adder Ha_M4_11 (
    .A(And_array[14]),
    .B(And_array[11]),
    .Cout(Carry_1[4]),
    .Sum(Sum_1[3])
  );
  Half_Adder Ha_M4_20 (
    .A(Sum_1[0]),
    .B(Carry_1[0]),
    .Cout(Carry_2[0]),
    .Sum(Result[2])
  );
  Half_Adder Ha_M4_21 (
    .A(Sum_1[2]),
    .B(Carry_1[2]),
    .Cout(Carry_2[2]),
    .Sum(Sum_2[1])
  );
  Half_Adder Ha_M4_22 (
    .A(Sum_1[3]),
    .B(Carry_1[3]),
    .Cout(Carry_2[3]),
    .Sum(Sum_2[2])
  );
  Half_Adder Ha_M4_23 (
    .A(And_array[15]),
    .B(Carry_1[4]),
    .Cout(Carry_2[4]),
    .Sum(Sum_2[3])
  );
  assign And_array[0] = Result[0];
  assign _23_ = B[0];
  assign _04_ = A[0];
  assign Result[0] = _27_;
  assign _24_ = B[1];
  assign And_array[1] = _14_;
  assign _25_ = B[2];
  assign And_array[2] = _15_;
  assign _26_ = B[3];
  assign And_array[3] = _16_;
  assign _05_ = A[1];
  assign And_array[4] = _17_;
  assign And_array[5] = _18_;
  assign And_array[6] = _19_;
  assign And_array[7] = _20_;
  assign _06_ = A[2];
  assign And_array[8] = _21_;
  assign And_array[9] = _22_;
  assign And_array[10] = _08_;
  assign And_array[11] = _09_;
  assign _07_ = A[3];
  assign _28_ = Sign;
  assign And_array[12] = _10_;
  assign And_array[13] = _11_;
  assign And_array[14] = _12_;
  assign And_array[15] = _13_;
endmodule

module M_4x4_3(Result, A, B, Sign);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  input [3:0] A;
  wire [3:0] A;
  wire [15:0] And_array;
  input [3:0] B;
  wire [3:0] B;
  wire [5:0] Carry_1;
  wire [4:0] Carry_2;
  wire Complement;
  output [7:0] Result;
  wire [7:0] Result;
  input Sign;
  wire Sign;
  wire [4:0] Sum_1;
  wire [3:0] Sum_2;
  sky130_fd_sc_hd__and2_0 _34_ (
    .A(_29_),
    .B(_26_),
    .X(_27_)
  );
  sky130_fd_sc_hd__and2_0 _35_ (
    .A(_23_),
    .B(_04_),
    .X(_28_)
  );
  sky130_fd_sc_hd__and2_0 _36_ (
    .A(_04_),
    .B(_24_),
    .X(_14_)
  );
  sky130_fd_sc_hd__and2_0 _37_ (
    .A(_04_),
    .B(_25_),
    .X(_15_)
  );
  sky130_fd_sc_hd__and2_0 _38_ (
    .A(_23_),
    .B(_05_),
    .X(_17_)
  );
  sky130_fd_sc_hd__and2_0 _39_ (
    .A(_24_),
    .B(_05_),
    .X(_18_)
  );
  sky130_fd_sc_hd__and2_0 _40_ (
    .A(_25_),
    .B(_05_),
    .X(_19_)
  );
  sky130_fd_sc_hd__and2_0 _41_ (
    .A(_23_),
    .B(_06_),
    .X(_21_)
  );
  sky130_fd_sc_hd__and2_0 _42_ (
    .A(_24_),
    .B(_06_),
    .X(_22_)
  );
  sky130_fd_sc_hd__and2_0 _43_ (
    .A(_25_),
    .B(_06_),
    .X(_08_)
  );
  sky130_fd_sc_hd__and2_0 _44_ (
    .A(_23_),
    .B(_07_),
    .X(_10_)
  );
  sky130_fd_sc_hd__and2_0 _45_ (
    .A(_24_),
    .B(_07_),
    .X(_11_)
  );
  sky130_fd_sc_hd__and2_0 _46_ (
    .A(_25_),
    .B(_07_),
    .X(_12_)
  );
  sky130_fd_sc_hd__o21ai_0 _47_ (
    .A1(_29_),
    .A2(_04_),
    .B1(_26_),
    .Y(_30_)
  );
  sky130_fd_sc_hd__a21oi_1 _48_ (
    .A1(_29_),
    .A2(_04_),
    .B1(_30_),
    .Y(_16_)
  );
  sky130_fd_sc_hd__o21ai_0 _49_ (
    .A1(_29_),
    .A2(_05_),
    .B1(_26_),
    .Y(_31_)
  );
  sky130_fd_sc_hd__a21oi_1 _50_ (
    .A1(_29_),
    .A2(_05_),
    .B1(_31_),
    .Y(_20_)
  );
  sky130_fd_sc_hd__o21ai_0 _51_ (
    .A1(_29_),
    .A2(_06_),
    .B1(_26_),
    .Y(_32_)
  );
  sky130_fd_sc_hd__a21oi_1 _52_ (
    .A1(_29_),
    .A2(_06_),
    .B1(_32_),
    .Y(_09_)
  );
  sky130_fd_sc_hd__o21ai_0 _53_ (
    .A1(_29_),
    .A2(_07_),
    .B1(_26_),
    .Y(_33_)
  );
  sky130_fd_sc_hd__a21oi_1 _54_ (
    .A1(_29_),
    .A2(_07_),
    .B1(_33_),
    .Y(_13_)
  );
  M4_Carry_Look_Ahead_Adder CLA_4_2 (
    .A(Carry_2),
    .B(Sum_2),
    .S(Result[7:3])
  );
  Full_Adder Fa_10 (
    .A(And_array[8]),
    .B(And_array[5]),
    .C(And_array[2]),
    .Cout(Carry_1[1]),
    .Sum(Sum_1[0])
  );
  Full_Adder Fa_11 (
    .A(And_array[12]),
    .B(And_array[9]),
    .C(Sign),
    .Cout(Carry_1[2]),
    .Sum(Sum_1[1])
  );
  Full_Adder Fa_12 (
    .A(And_array[6]),
    .B(And_array[3]),
    .C(Complement),
    .Cout(Carry_1[3]),
    .Sum(Sum_1[2])
  );
  Full_Adder Fa_13 (
    .A(And_array[13]),
    .B(And_array[10]),
    .C(And_array[7]),
    .Cout(Carry_1[4]),
    .Sum(Sum_1[3])
  );
  Full_Adder Fa_20 (
    .A(Carry_1[1]),
    .B(Sum_1[1]),
    .C(Sum_1[2]),
    .Cout(Carry_2[1]),
    .Sum(Sum_2[0])
  );
  Full_Adder Fa_21 (
    .A(Carry_1[2]),
    .B(Carry_1[3]),
    .C(Sum_1[3]),
    .Cout(Carry_2[2]),
    .Sum(Sum_2[1])
  );
  Half_Adder Ha_10 (
    .A(And_array[4]),
    .B(And_array[1]),
    .Cout(Carry_1[0]),
    .Sum(Result[1])
  );
  Half_Adder Ha_11 (
    .A(And_array[14]),
    .B(And_array[11]),
    .Cout(Carry_1[5]),
    .Sum(Sum_1[4])
  );
  Half_Adder Ha_20 (
    .A(Carry_1[0]),
    .B(Sum_1[0]),
    .Cout(Carry_2[0]),
    .Sum(Result[2])
  );
  Half_Adder Ha_21 (
    .A(Carry_1[4]),
    .B(Sum_1[4]),
    .Cout(Carry_2[3]),
    .Sum(Sum_2[2])
  );
  Half_Adder Ha_22 (
    .A(Carry_1[5]),
    .B(And_array[15]),
    .Cout(Carry_2[4]),
    .Sum(Sum_2[3])
  );
  assign And_array[0] = Result[0];
  assign _29_ = Sign;
  assign _26_ = B[3];
  assign Complement = _27_;
  assign _23_ = B[0];
  assign _04_ = A[0];
  assign Result[0] = _28_;
  assign _24_ = B[1];
  assign And_array[1] = _14_;
  assign _25_ = B[2];
  assign And_array[2] = _15_;
  assign _05_ = A[1];
  assign And_array[4] = _17_;
  assign And_array[5] = _18_;
  assign And_array[6] = _19_;
  assign _06_ = A[2];
  assign And_array[8] = _21_;
  assign And_array[9] = _22_;
  assign And_array[10] = _08_;
  assign _07_ = A[3];
  assign And_array[12] = _10_;
  assign And_array[13] = _11_;
  assign And_array[14] = _12_;
  assign And_array[3] = _16_;
  assign And_array[7] = _20_;
  assign And_array[11] = _09_;
  assign And_array[15] = _13_;
endmodule

module M_4x4_4(Result, A, B, Sign, Mode);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  input [3:0] A;
  wire [3:0] A;
  wire \And_array[0] ;
  wire \And_array[10] ;
  wire \And_array[11] ;
  wire \And_array[12] ;
  wire \And_array[13] ;
  wire \And_array[14] ;
  wire \And_array[15] ;
  wire \And_array[1] ;
  wire \And_array[2] ;
  wire \And_array[3] ;
  wire \And_array[4] ;
  wire \And_array[5] ;
  wire \And_array[6] ;
  wire \And_array[7] ;
  wire \And_array[8] ;
  wire \And_array[9] ;
  input [3:0] B;
  wire [3:0] B;
  wire [5:0] Carry_1;
  wire [4:0] Carry_2;
  wire Complement;
  input Mode;
  wire Mode;
  wire Mode_sign;
  output [7:0] Result;
  wire [7:0] Result;
  input Sign;
  wire Sign;
  wire [4:0] Sum_1;
  wire [3:0] Sum_2;
  wire [4:0] Sum_Sign;
  sky130_fd_sc_hd__a21oi_1 _41_ (
    .A1(_34_),
    .A2(_07_),
    .B1(_35_),
    .Y(_14_)
  );
  sky130_fd_sc_hd__o21ai_0 _42_ (
    .A1(_34_),
    .A2(_08_),
    .B1(_30_),
    .Y(_36_)
  );
  sky130_fd_sc_hd__a21oi_1 _43_ (
    .A1(_34_),
    .A2(_08_),
    .B1(_36_),
    .Y(_25_)
  );
  sky130_fd_sc_hd__o21ai_0 _44_ (
    .A1(_34_),
    .A2(_09_),
    .B1(_30_),
    .Y(_37_)
  );
  sky130_fd_sc_hd__a21oi_1 _45_ (
    .A1(_34_),
    .A2(_09_),
    .B1(_37_),
    .Y(_21_)
  );
  sky130_fd_sc_hd__nand2_1 _46_ (
    .A(_10_),
    .B(_27_),
    .Y(_38_)
  );
  sky130_fd_sc_hd__xnor2_1 _47_ (
    .A(_34_),
    .B(_38_),
    .Y(_20_)
  );
  sky130_fd_sc_hd__nand2_1 _48_ (
    .A(_10_),
    .B(_28_),
    .Y(_39_)
  );
  sky130_fd_sc_hd__xnor2_1 _49_ (
    .A(_34_),
    .B(_39_),
    .Y(_19_)
  );
  sky130_fd_sc_hd__nand2_1 _50_ (
    .A(_10_),
    .B(_29_),
    .Y(_40_)
  );
  sky130_fd_sc_hd__xnor2_1 _51_ (
    .A(_34_),
    .B(_40_),
    .Y(_18_)
  );
  sky130_fd_sc_hd__mux2_1 _52_ (
    .A0(_34_),
    .A1(_10_),
    .S(_30_),
    .X(_11_)
  );
  sky130_fd_sc_hd__and2_0 _53_ (
    .A(_34_),
    .B(_32_),
    .X(_33_)
  );
  sky130_fd_sc_hd__and3_1 _54_ (
    .A(_34_),
    .B(_30_),
    .C(_32_),
    .X(_31_)
  );
  sky130_fd_sc_hd__and2_0 _55_ (
    .A(_27_),
    .B(_07_),
    .X(_17_)
  );
  sky130_fd_sc_hd__and2_0 _56_ (
    .A(_07_),
    .B(_28_),
    .X(_16_)
  );
  sky130_fd_sc_hd__and2_0 _57_ (
    .A(_07_),
    .B(_29_),
    .X(_15_)
  );
  sky130_fd_sc_hd__and2_0 _58_ (
    .A(_27_),
    .B(_08_),
    .X(_13_)
  );
  sky130_fd_sc_hd__and2_0 _59_ (
    .A(_28_),
    .B(_08_),
    .X(_12_)
  );
  sky130_fd_sc_hd__and2_0 _60_ (
    .A(_29_),
    .B(_08_),
    .X(_26_)
  );
  sky130_fd_sc_hd__and2_0 _61_ (
    .A(_27_),
    .B(_09_),
    .X(_24_)
  );
  sky130_fd_sc_hd__and2_0 _62_ (
    .A(_28_),
    .B(_09_),
    .X(_23_)
  );
  sky130_fd_sc_hd__and2_0 _63_ (
    .A(_29_),
    .B(_09_),
    .X(_22_)
  );
  sky130_fd_sc_hd__o21ai_0 _64_ (
    .A1(_34_),
    .A2(_07_),
    .B1(_30_),
    .Y(_35_)
  );
  Carry_Look_Ahead_Adder CLA (
    .A({ Sign, Sum_Sign[3], Sum_2[2:0] }),
    .B(Carry_2),
    .S(Result[7:3])
  );
  Full_Adder Fa_10 (
    .A(\And_array[7] ),
    .B(\And_array[10] ),
    .C(\And_array[13] ),
    .Cout(Carry_1[1]),
    .Sum(Sum_1[0])
  );
  Full_Adder Fa_11 (
    .A(\And_array[3] ),
    .B(\And_array[6] ),
    .C(Mode_sign),
    .Cout(Carry_1[2]),
    .Sum(Sum_1[1])
  );
  Full_Adder Fa_12 (
    .A(\And_array[9] ),
    .B(\And_array[12] ),
    .C(Complement),
    .Cout(Carry_1[3]),
    .Sum(Sum_1[2])
  );
  Full_Adder Fa_13 (
    .A(\And_array[2] ),
    .B(\And_array[5] ),
    .C(\And_array[8] ),
    .Cout(Carry_1[4]),
    .Sum(Sum_1[3])
  );
  Full_Adder Fa_20 (
    .A(Carry_1[1]),
    .B(Sum_1[1]),
    .C(Sum_1[2]),
    .Cout(Carry_2[1]),
    .Sum(Sum_2[0])
  );
  Full_Adder Fa_21 (
    .A(Carry_1[2]),
    .B(Carry_1[3]),
    .C(Sum_1[3]),
    .Cout(Carry_2[2]),
    .Sum(Sum_2[1])
  );
  Half_Adder Ha_10 (
    .A(\And_array[11] ),
    .B(\And_array[14] ),
    .Cout(Carry_1[0]),
    .Sum(Result[1])
  );
  Half_Adder Ha_11 (
    .A(\And_array[1] ),
    .B(\And_array[4] ),
    .Cout(Carry_1[5]),
    .Sum(Sum_1[4])
  );
  Half_Adder Ha_20 (
    .A(Carry_1[0]),
    .B(Sum_1[0]),
    .Cout(Carry_2[0]),
    .Sum(Result[2])
  );
  Half_Adder Ha_21 (
    .A(Carry_1[4]),
    .B(Sum_1[4]),
    .Cout(Carry_2[3]),
    .Sum(Sum_2[2])
  );
  Half_Adder Ha_22 (
    .A(Carry_1[5]),
    .B(\And_array[0] ),
    .Cout(Carry_2[4]),
    .Sum(Sum_Sign[3])
  );
  assign Result[0] = \And_array[15] ;
  assign Sum_2[3] = Sum_Sign[3];
  assign { Sum_Sign[4], Sum_Sign[2:0] } = { Sign, Sum_2[2:0] };
  assign _34_ = Sign;
  assign _10_ = A[3];
  assign _30_ = B[3];
  assign \And_array[0]  = _11_;
  assign _32_ = Mode;
  assign Mode_sign = _33_;
  assign Complement = _31_;
  assign _27_ = B[0];
  assign _07_ = A[0];
  assign \And_array[15]  = _17_;
  assign _28_ = B[1];
  assign \And_array[14]  = _16_;
  assign _29_ = B[2];
  assign \And_array[13]  = _15_;
  assign _08_ = A[1];
  assign \And_array[11]  = _13_;
  assign \And_array[10]  = _12_;
  assign \And_array[9]  = _26_;
  assign _09_ = A[2];
  assign \And_array[7]  = _24_;
  assign \And_array[6]  = _23_;
  assign \And_array[5]  = _22_;
  assign \And_array[12]  = _14_;
  assign \And_array[8]  = _25_;
  assign \And_array[4]  = _21_;
  assign \And_array[3]  = _20_;
  assign \And_array[2]  = _19_;
  assign \And_array[1]  = _18_;
endmodule

module Multiplier_8x8(Result, In_1, In_2, Sign, Mode);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  wire _44_;
  wire _45_;
  wire _46_;
  wire _47_;
  wire _48_;
  wire _49_;
  wire _50_;
  wire _51_;
  wire _52_;
  wire _53_;
  wire _54_;
  wire _55_;
  wire _56_;
  wire _57_;
  wire _58_;
  wire _59_;
  wire _60_;
  wire _61_;
  wire _62_;
  wire _63_;
  wire _64_;
  wire _65_;
  wire _66_;
  wire _67_;
  wire _68_;
  wire _69_;
  wire _70_;
  wire _71_;
  wire _72_;
  wire _73_;
  wire _74_;
  wire _75_;
  wire _76_;
  wire _77_;
  wire _78_;
  wire _79_;
  wire [1:0] Cout;
  wire [7:0] Cout_R123;
  input [7:0] In_1;
  wire [7:0] In_1;
  input [7:0] In_2;
  wire [7:0] In_2;
  input Mode;
  wire Mode;
  wire [31:0] Partial_Product;
  wire [7:0] Partial_Product_Inter;
  output [15:0] Result;
  wire [15:0] Result;
  input Sign;
  wire Sign;
  wire [7:0] Sum_R123;
  wire [7:0] Sum_R123_1;
  sky130_fd_sc_hd__xor3_1 _80_ (
    .A(_30_),
    .B(_26_),
    .C(_14_),
    .X(_32_)
  );
  sky130_fd_sc_hd__xor3_1 _81_ (
    .A(_31_),
    .B(_27_),
    .C(_15_),
    .X(_33_)
  );
  sky130_fd_sc_hd__xor3_1 _82_ (
    .A(_08_),
    .B(_28_),
    .C(_16_),
    .X(_34_)
  );
  sky130_fd_sc_hd__xor3_1 _83_ (
    .A(_09_),
    .B(_29_),
    .C(_17_),
    .X(_35_)
  );
  sky130_fd_sc_hd__xor3_1 _84_ (
    .A(_10_),
    .B(_22_),
    .C(_18_),
    .X(_36_)
  );
  sky130_fd_sc_hd__xor3_1 _85_ (
    .A(_11_),
    .B(_23_),
    .C(_19_),
    .X(_37_)
  );
  sky130_fd_sc_hd__xor3_1 _86_ (
    .A(_12_),
    .B(_24_),
    .C(_20_),
    .X(_38_)
  );
  sky130_fd_sc_hd__xor3_1 _87_ (
    .A(_13_),
    .B(_25_),
    .C(_21_),
    .X(_39_)
  );
  sky130_fd_sc_hd__maj3_1 _88_ (
    .A(_30_),
    .B(_26_),
    .C(_14_),
    .X(_00_)
  );
  sky130_fd_sc_hd__maj3_1 _89_ (
    .A(_31_),
    .B(_27_),
    .C(_15_),
    .X(_01_)
  );
  sky130_fd_sc_hd__maj3_1 _90_ (
    .A(_08_),
    .B(_28_),
    .C(_16_),
    .X(_02_)
  );
  sky130_fd_sc_hd__maj3_1 _91_ (
    .A(_09_),
    .B(_29_),
    .C(_17_),
    .X(_03_)
  );
  sky130_fd_sc_hd__maj3_1 _92_ (
    .A(_10_),
    .B(_22_),
    .C(_18_),
    .X(_04_)
  );
  sky130_fd_sc_hd__maj3_1 _93_ (
    .A(_11_),
    .B(_23_),
    .C(_19_),
    .X(_05_)
  );
  sky130_fd_sc_hd__maj3_1 _94_ (
    .A(_12_),
    .B(_24_),
    .C(_20_),
    .X(_06_)
  );
  sky130_fd_sc_hd__maj3_1 _95_ (
    .A(_13_),
    .B(_25_),
    .C(_21_),
    .X(_07_)
  );
  Look_Ahead_Adder_No_Cin CLA_1 (
    .A(Sum_R123[4:1]),
    .B(Cout_R123[3:0]),
    .Cout(Cout[0]),
    .S(Sum_R123_1[3:0])
  );
  Look_Ahead_Adder CLA_2 (
    .A(Cout_R123[7:4]),
    .B({ Partial_Product[28], Sum_R123[7:5] }),
    .Cin(Cout[0]),
    .Cout(Cout[1]),
    .S(Sum_R123_1[7:4])
  );
  Increment I0 (
    .A(Partial_Product[31:29]),
    .B(Cout[1]),
    .S(Result[15:13])
  );
  M_4x4_1 PP_0 (
    .A(In_1[3:0]),
    .B(In_2[3:0]),
    .Result(Partial_Product[7:0])
  );
  M_4x4_2 PP_1 (
    .A(In_1[7:4]),
    .B(In_2[3:0]),
    .Result(Partial_Product[15:8]),
    .Sign(Sign)
  );
  M_4x4_3 PP_2 (
    .A(In_1[3:0]),
    .B(In_2[7:4]),
    .Result(Partial_Product[23:16]),
    .Sign(Sign)
  );
  M_4x4_4 PP_3 (
    .A(In_1[7:4]),
    .B(In_2[7:4]),
    .Mode(Mode),
    .Result(Partial_Product[31:24]),
    .Sign(Sign)
  );
  assign Partial_Product_Inter = { Partial_Product[27:24], Partial_Product[7:4] };
  assign { Result[12:5], Result[3:0] } = { Sum_R123_1, Partial_Product[3:0] };
  assign Sum_R123[0] = Result[4];
  assign _30_ = Partial_Product[8];
  assign _26_ = Partial_Product[4];
  assign _14_ = Partial_Product[16];
  assign Result[4] = _32_;
  assign _31_ = Partial_Product[9];
  assign _27_ = Partial_Product[5];
  assign _15_ = Partial_Product[17];
  assign Sum_R123[1] = _33_;
  assign _08_ = Partial_Product[10];
  assign _28_ = Partial_Product[6];
  assign _16_ = Partial_Product[18];
  assign Sum_R123[2] = _34_;
  assign _09_ = Partial_Product[11];
  assign _29_ = Partial_Product[7];
  assign _17_ = Partial_Product[19];
  assign Sum_R123[3] = _35_;
  assign _10_ = Partial_Product[12];
  assign _22_ = Partial_Product[24];
  assign _18_ = Partial_Product[20];
  assign Sum_R123[4] = _36_;
  assign _11_ = Partial_Product[13];
  assign _23_ = Partial_Product[25];
  assign _19_ = Partial_Product[21];
  assign Sum_R123[5] = _37_;
  assign _12_ = Partial_Product[14];
  assign _24_ = Partial_Product[26];
  assign _20_ = Partial_Product[22];
  assign Sum_R123[6] = _38_;
  assign _13_ = Partial_Product[15];
  assign _25_ = Partial_Product[27];
  assign _21_ = Partial_Product[23];
  assign Sum_R123[7] = _39_;
  assign Cout_R123[0] = _00_;
  assign Cout_R123[1] = _01_;
  assign Cout_R123[2] = _02_;
  assign Cout_R123[3] = _03_;
  assign Cout_R123[4] = _04_;
  assign Cout_R123[5] = _05_;
  assign Cout_R123[6] = _06_;
  assign Cout_R123[7] = _07_;
endmodule

module ha(a, b, sum, co);
  wire _0_;
  wire _1_;
  wire _2_;
  wire _3_;
  input a;
  wire a;
  input b;
  wire b;
  output co;
  wire co;
  output sum;
  wire sum;
  sky130_fd_sc_hd__and2_0 _4_ (
    .A(_1_),
    .B(_0_),
    .X(_2_)
  );
  sky130_fd_sc_hd__xor2_1 _5_ (
    .A(_1_),
    .B(_0_),
    .X(_3_)
  );
  assign _1_ = b;
  assign _0_ = a;
  assign sum = _3_;
  assign co = _2_;
endmodule
