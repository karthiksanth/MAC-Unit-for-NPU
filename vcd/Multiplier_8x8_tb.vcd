$date
	Thu Oct  3 18:20:26 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Multiplier_8x8_tb $end
$scope module DUT $end
$var wire 8 ! Cout_R123 [7:0] $end
$var wire 8 " In_1 [7:0] $end
$var wire 8 # In_2 [7:0] $end
$var wire 1 $ Mode $end
$var wire 1 % Sign $end
$var wire 8 & Sum_R123 [7:0] $end
$var wire 8 ' Sum_R123_1 [7:0] $end
$var wire 16 ( Result [15:0] $end
$var wire 8 ) Partial_Product_Inter [7:0] $end
$var wire 32 * Partial_Product [31:0] $end
$var wire 2 + Cout [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 +
b11100100000100000111100000000000 *
b1000000 )
b1110110010000000 (
b1100100 '
b101000 &
1%
1$
b1000000 #
b10010010 "
b1010000 !
$end
#20
b1000110 '
b10000 !
b1101100 &
b100011000100 (
b0 )
b101000111100000000100 *
b110001 #
b100 "
#40
b1011101 '
b10 )
b1000000 !
b10101110100100 (
b111010 &
b100000011100000100100000100100 *
b11000110 #
b10000110 "
#60
b1 )
b1001110 '
b1 !
b10011010 &
b100111000010 (
b10001001001100010010 *
b1001 #
b110010 "
#80
b0 +
b1101000 '
b0 )
b1000 !
b11000000 &
b100110100000000 (
b1000000100010000100100000000000 *
b10000110 #
b10000000 "
#100
b1 +
b1010011 '
b111011 !
b110000 &
b10101001101010 (
b111001 )
b100011001110110011001010011010 *
b10011110 #
b10111011 "
#120
b0 +
b10010010 '
b1110010 !
b1000000 &
b1001001000100 (
b1000010 )
b100011100000111001000100100 *
b11000110 #
b11110110 "
#140
b10 +
b110011 '
b1110000 !
b11001110100 (
b10000111 &
b10100010 )
b11111010010100000111010100100100 *
b1100011 #
b11111100 "
#160
b10 +
b1000100 '
b10010010 !
b1100100 &
b11100000 )
b10100010001010 (
b11110000100101001011000001010 *
b1010101 #
b1100010 "
#180
b11 +
b100110 '
b10011000110 (
b1001101 !
b10110010 &
b11010001 )
b11111101000011100110110100010110 *
b111011 #
b11110010 "
#200
b1 +
b1000000 '
b1000 !
b1110000 &
b100000000000 (
b0 )
b10000111100000000000 *
b1100 #
b0 "
#220
b1000010 '
b1110101 &
b101 )
b100001011010 (
b10000111100001011010 *
b110 #
b1111 "
#240
b1000001 '
b100000101010 (
b1110010 &
b10 )
b10000111100000101010 *
b111 "
#260
b1000001 '
b1110011 &
b11 )
b100000110010 (
b10000111100000110010 *
b101 #
b1010 "
#280
b1000000 '
b1110000 &
b0 )
b100000000011 (
b10000111100000000011 *
b11 #
b1 "
#300
b1110001 &
b1 )
b100000011000 (
b10000111100000011000 *
b1000 #
b11 "
#320
b1000001 '
b1110010 &
b10 )
b100000100100 (
b10000111100000100100 *
b1001 #
b100 "
#340
b1110011 &
b11 )
b100000110100 (
b10000111100000110100 *
b100 #
b1101 "
#360
b1000000 '
b1110000 &
b0 )
b100000000000 (
b10000111100000000000 *
b0 #
b100 "
#380
b10 #
b0 "
#400
